import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View, ActivityIndicator } from 'react-native';



export default class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      isLoading: true,
      dataSource: null,
    }
  }

  componentDidMount () {
    return fetch('https://pokeapi.co/api/v2/pokemon/')
      .then((response) => response.json())
      .then((responseJson) => {
        this.setState({
          isLoading: false,
          dataSource: responseJson.results,
        })
      })
    .catch((error) => {
      console.log(error)
    });

    fetch('',{
      method: 'POST',
      headers: {
        Accept: 'application.json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        firstParam: "",
        secondParam: ""
      }),
    });
  }
  render(){
    if(this.state.isLoading){
      return(
        <View style = {styles.container}>
          <ActivityIndicator/>
        </View>
      )
    }
    return (
        <View style={styles.container}>
        
        </View>
    );
  }
} 

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});






import React, {useEffect, useState} from 'react';
import {ActivityIndicator, FlatList, Text, View} from 'react-native';

const App = () => {
  const [isLoading, setLoading] = useState(true);
  const [data, setData] = useState([]);

  const getMovies = async () => {
    try {
      const response = await fetch('https://pokeapi.co/api/v2/pokemon');
      const json = await response.json();
      console.error(json.results);
      setData(json.results);
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    getMovies();
  }, []);

  return (
    <>
      <button>Click Me</button>
      <View>
        
        {isLoading ? (<ActivityIndicator />
        ) : (
          <FlatList
            data={data}
            keyExtractor={({id}) => id}
            renderItem={({item}) => (
              <Text>
                {item.name}
              </Text>
            )}
          />
        )}
      </View>
    </>
  );
};

export default App;



import React, {useEffect, useState} from 'react';
import {ActivityIndicator, FlatList, Text, View} from 'react-native';



export default class App extends React.Component {

  constructor(props) {
    super(props);
    this.handleClick = this.handleClick.bind(this);
    this.state = {
      isLoading: true,
      dataSource: null,
    }
  }
  handleClick= async () => {
      try {
        const response = await fetch('https://pokeapi.co/api/v2/pokemon');
        const json = await response.json();
        this.dataSource = json.results;
      } catch (error) {
        console.error(error);
      } finally {
        this.isLoading = false;
      }
      console.log(this.isLoading)
  }

  render() {
    if(this.state.isLoading){
      return(
        <>
          <button onClick={this.handleClick}>Печать</button>
          <View>
            <FlatList
              data={this.dataSource}
              keyExtractor={({id}) => id}
              renderItem={({item}) => (
                <Text>
                  {item.name}
                </Text>
              )}
            />
          </View>
        </>
        )
        
    }
    else{
      return (
        <>
          <button onClick={this.handleClick}>Найти всех покемонов 2</button>
            <View>
              <ActivityIndicator/>
            </View>
        </>
      );
    }
    
  
        
      
    
  }
 
    

}




